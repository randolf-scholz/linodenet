<?xml version="1.0" encoding="utf-8"?><testsuites><testsuite name="pytest" errors="0" failures="1" skipped="0" tests="5" time="129.666" timestamp="2021-07-07T20:58:38.516057" hostname="workstation"><testcase classname="test.test_LinODE" name="test_linode_error" time="38.948"><failure message="AssertionError: 99% quantile q=13714.155785392848 larger than allowed tol=10000&#10;assert 13714.155785392848 &lt;= 10000">nsamples = 100, make_plot = False

    def test_linode_error(nsamples=100, make_plot=False):
        r"""Compare LinODE against scipy.odeint on linear system."""
        logger.info("Testing LinODE")
        logger.info("Generating %i samples in single precision", nsamples)
        err_single = np.array(
            [linode_error(precision="single") for _ in trange(nsamples)]
        ).T
        logger.info("Generating %i samples in double precision", nsamples)
        err_double = np.array(
            [linode_error(precision="double") for _ in trange(nsamples)]
        ).T
    
        for err, tol in zip(err_single, (10 ** 0, 10 ** 2, 10 ** 4)):
            q = np.nanquantile(err, 0.99)
            logger.info("99%% quantile %f", q)
&gt;           assert q &lt;= tol, f"99% quantile {q=} larger than allowed {tol=}"
E           AssertionError: 99% quantile q=13714.155785392848 larger than allowed tol=10000
E           assert 13714.155785392848 &lt;= 10000

test/test_LinODE.py:90: AssertionError</failure></testcase><testcase classname="test.test_all" name="test_all_models" time="2.761" /><testcase classname="test.test_iResNet" name="test_LinearContraction" time="0.283" /><testcase classname="test.test_iResNet" name="test_iResNetBlock" time="0.686" /><testcase classname="test.test_initializations" name="test_all_initializations" time="84.866" /></testsuite></testsuites>