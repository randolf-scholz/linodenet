########################
# PyLint Configuration #
########################

[tool.pylint]
[tool.pylint.'MESSAGES CONTROL']
disable= [
    "C0103",  # invalid-name
    "C0144",  # non-ascii-name
    "R0801",  # similar lines
    "W0511",  # (fixme) (todos)
    ]

[tool.pylint.REPORTS]
# Set the output format. Available formats are text, parseable, colorized, json and
# msvs (visual studio). You can also give a reporter class, e.g. mypackage.mymodule.MyReporterClass
output-format="colorized"

[tool.pylint.FORMAT]
max-line-length=100

[tool.pylint.TYPECHECK]
# List of members which are set dynamically and missed by pylint inference system, and so shouldn't
# trigger E1101 when accessed. Python regular expressions are accepted.
generated-members=["numpy.*","torch.*"]


########################
# PyTest Configuration #
########################
[tool.pytest.ini_options]
testpaths = [ "test" ]
reruns = "3"
only_rerun = "AssertionError"


######################
# MyPy Configuration #
######################
[tool.mypy]
files = ["linodenet", "test"]
python_version = "3.9"
color_output = true
error_summary = true
show_error_codes = true
show_column_numbers = true
plugins = [ "numpy.typing.mypy_plugin", "pydantic.mypy" ]
pretty = true

[[tool.mypy.overrides]]
module = [
    "h5py.*",
    "matplotlib.*",
    "modin.*",
    "numba.*",
    "pandas.*",
    "sklearn.*",
    "scipy.*",
    "tsdm.*",
    "tqdm.*",
    ]
ignore_missing_imports = true


#######################
# isort Configuration #
#######################
[tool.isort]
# isort profiles: black, django, pycharm, google, open_stack, plone, attrs, hug, wemake, appnexus
# black-compatible: black, appnexus
profile="black"
src_paths=["linodenet", "test"]
py_version=39
known_first_party = ["tsdm"]
# flake8-profiles: appnexus, cryptography, edited, google, pep8, pycharm, smarkets
# black-compatible: black, appnexus

#######################
# black Configuration #
#######################
[tool.black]
line-length = 88
target-version = ['py39']
color = true

############################
# pydocstyle Configuration #
############################
[tool.pydocstyle]
convention = "numpy"
#count = true
