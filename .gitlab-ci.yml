default:
  image: python:3.9
  tags: [docker]

stages:
  - setup
  - code analysis
  - documentation
  - unit tests

installtion:
  stage: setup
  before_script:
    # setup virtual environment
    - python -c "import sys; print(sys.version)"
    - pip install --upgrade pip virtualenv
    - python -m venv BUILDENV
    - source BUILDENV/bin/activate
    - pip install --upgrade pip wheel
  script:
    - source BUILDENV/bin/activate
    # install special dependency
#    - pip install git+ssh://git@software.ismll.uni-hildesheim.de/ISMLL-internal/special-interest-group-time-series/tsdm.git
#    - pip install git+ssh://git@git.tu-berlin.de/bvt-htbd/kiwi/tf1/tsdm.git
    # install the package
    - python setup.py sdist bdist_wheel
  after_script:
    # upload as a PyPi package to gitlab registry
    - source BUILDENV/bin/activate
    - pip install twine
    - TWINE_PASSWORD=${CI_JOB_TOKEN}
    - TWINE_USERNAME=gitlab-ci-token
    - twine upload --verbose --repository-url ${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/pypi dist/*
  artifacts:
    paths:
      - dist/*.whl

flake8:
  stage: code analysis
  allow_failure: true
  before_script:
    - pip install flake8
  script:
    - >
      flake8 
      --max-line-length=100
      --ignore=E203,E221,E226,E241 
      linodenet
    # We ignore the following PEP8 Errors:
    # E203 whitespace before ':'
    # E221 multiple spaces before operator
    # E226 missing whitespace around arithmetic operator
    # E241 multiple spaces after ':'


pylint:
  stage: code analysis
  allow_failure: true
  before_script:
      - pip install pylint pylint-exit anybadge torch scipy
      - mkdir ./pylint
  script:
    - >
      pylint 
      --max-line-length=100
      --generated-members=numpy.*,torch.*
      --disable=C0103,C0144
      --output-format=text
      linodenet
      | tee ./pylint/pylint.log || pylint-exit $?
    # We ignore the following PyLint Errors:
    # C0103 invalid-name
    # C0144 non-ascii-name
  after_script:
    - PYLINT_SCORE=$(sed -n 's/^Your code has been rated at \([-0-9.]*\)\/.*/\1/p' ./pylint/pylint.log)
    - anybadge --label=Pylint --file=pylint/pylint.svg --value=$PYLINT_SCORE 2=red 4=orange 8=yellow 10=green
    - echo "Pylint score is $PYLINT_SCORE"
  artifacts:
    paths:
      - ./pylint/

pages:
  stage: documentation
  allow_failure: true
  before_script:
    - pip install -U sphinx sphinx-rtd-theme sphinx-math-dollar
    - cd docs
  script:
    - make html
  after_script:
    - mv _build/html/ ../public/
  artifacts:
    paths:
      - public
  only:
    - master

tox:
  stage: unit tests
  allow_failure: true
  before_script:
    - pip install tox
  script:
    echo "tox --recreate"